(set-logic HORN)
(declare-fun inv (Int Int Int) Bool)
(assert (forall ((z0 Int) (y0 Int) (x0 Int))
  (=> (and (= x0 0) (= y0 0) (= z0 0)) (inv x0 y0 z0))))
(assert (forall ((z1 Int) (y1 Int) (x1 Int) (z0 Int) (x0 Int) (y0 Int))
  (let ((a!1 (ite (or (> x0 100) (< (mod x0 10) 5)) (+ 1 y0) y0))
        (a!2 (ite (or (> x0 100) (< (mod x0 10) 5)) z0 (+ 1 z0))))
    (=> (and (inv x0 y0 z0) (= x1 (+ x0 1)) (= y1 a!1) (= z1 a!2))
        (inv x1 y1 z1)))))
(assert (forall ((z0 Int) (y0 Int) (x0 Int))
  (=> (and (inv x0 y0 z0) (> x0 100) (> y0 z0)) false)))
(check-sat)
